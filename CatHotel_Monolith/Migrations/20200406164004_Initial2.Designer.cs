// <auto-generated />
using System;
using CatHotel_Monolith.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CatHotel_Monolith.Migrations
{
    [DbContext(typeof(CatContext))]
    [Migration("20200406164004_Initial2")]
    partial class Initial2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CatHotel_Monolith.Models.Booking", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BookingMade")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CCTV")
                        .HasColumnType("bit");

                    b.Property<int>("CatsAmount")
                        .HasColumnType("int");

                    b.Property<bool?>("CheckedIn")
                        .HasColumnType("bit");

                    b.Property<bool?>("CheckedOut")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid?>("RoomID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("RoomID");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("CatHotel_Monolith.Models.Cat", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BookingID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CatCharacter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatLitter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatMedicalCondition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatVetAddress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatVetAddress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatVetCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatVetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatVetPhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CatVetPostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("ChekedIn")
                        .HasColumnType("bit");

                    b.Property<bool?>("ChekedOut")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CustomerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfLastVac")
                        .HasColumnType("datetime2");

                    b.Property<int>("MealType")
                        .HasColumnType("int");

                    b.Property<string>("TagID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Vaccination")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("BookingID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Cats");
                });

            modelBuilder.Entity("CatHotel_Monolith.Models.Customer", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Cats")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Town")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("CatHotel_Monolith.Models.Room", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Available")
                        .HasColumnType("bit");

                    b.Property<bool?>("Booked")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("BookingEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BookingStart")
                        .HasColumnType("datetime2");

                    b.Property<bool>("CheckedIn")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckedOut")
                        .HasColumnType("bit");

                    b.Property<int>("MaxNoOfCatsInRoom")
                        .HasColumnType("int");

                    b.Property<int>("RoomNo")
                        .HasColumnType("int");

                    b.Property<int>("RoomType")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("CatHotel_Monolith.Models.Booking", b =>
                {
                    b.HasOne("CatHotel_Monolith.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("CatHotel_Monolith.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomID");
                });

            modelBuilder.Entity("CatHotel_Monolith.Models.Cat", b =>
                {
                    b.HasOne("CatHotel_Monolith.Models.Booking", "Booking")
                        .WithMany("Cats")
                        .HasForeignKey("BookingID");

                    b.HasOne("CatHotel_Monolith.Models.Customer", "Customer")
                        .WithMany("Cat")
                        .HasForeignKey("CustomerID");
                });
#pragma warning restore 612, 618
        }
    }
}
